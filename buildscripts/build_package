#!/usr/bin/env bash


DEPLOY_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cd ${DEPLOY_DIR}
cd .. #Navigate to workdir

WORKDIR=$(pwd)
DISTDIR=${WORKDIR}/dist
TESTDIR=${WORKDIR}/tests
EXAMPLESDIR=${WORKDIR}/examples
#1 execute tests before building the package




#2 install the package using poetry

poetry update #to update the poetry.lock with the latest versions of the depending packages
poetry install

poetry show

#3 build the package

echo "Removing old builds before building the package ..."
cd ${DISTDIR}
rm *.whl
rm *.tar.gz



echo "Make build ..."
cd ${WORKDIR}
poetry build


#Use poetry to make dependencies (https://python-poetry.org/docs/basic-usage/)
#export PATH="/home/thoverga/.local/bin:${PATH}" #for poetry
#poetry add pandas
#poetry add numpy
#poetry add matplotlib
#poetry add geopandas
#poetry add xarray
#poetry add rioxarray


#make logfile for each test and stream  prompt output for the test
make_test_log () {
	testfile="$1"
	specificlogfile="${DEPLOY_DIR}/${testfile::-3}_log"
	rm -f ${specificlogfile}
	touch ${specificlogfile}
	echo "$specificlogfile"
}



echo 'Running the documentation examples as test'
cd ${EXAMPLESDIR}

#delete all .py versions of the examples (rebuild them from the notebooks)
rm ${EXAMPLESDIR}/*.py
#convert nb to python files
jupyter nbconvert --to python *.ipynb

cd ${EXAMPLESDIR}
filenames=`ls ./*.py`
for t in $filenames; do
	example_file=${EXAMPLESDIR}/${t}
	logfile="$(make_test_log ${t})"
	echo Running ${t} as a test
	poetry run python ${example_file} >> ${logfile} 2>&1
	if [ $? -eq 0 ]; then
   		echo "succeeded !!"
	else
    		echo "FAIL!!"
	fi

done






echo 'Running the tests'
cd ${TESTDIR}
filenames=`ls ./*.py`
for t in $filenames; do
	example_file=${TESTDIR}/${t}
	logfile="$(make_test_log ${t})"
	echo Running ${t} as a test
	poetry run python ${example_file} >> ${logfile} 2>&1
	if [ $? -eq 0 ]; then
   		echo "succeeded !!"
	else
    		echo "FAIL!!"
	fi

done





cd ${WORKDIR}
